
me sale este error al hacer un registro en mi base de datos te paso todo mi codigo

ErrorException
Undefined variable: id_personaAutorizada

<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Models\PersonaAutorizada;

use Illuminate\Support\Facades\Session;

class InformacionController extends Controller
{
    
    public function guardar(Request $request)
    {
        $mensajes = [
            'required' => 'El campo :attribute es obligatorio.',
            'email' => 'El campo :attribute debe ser una dirección de correo electrónico válida.',
        ];
    
        $request->validate([
            'nombre_cliente' => 'required',
            'domicilio' => 'required',
            'correo_electronico' => 'required|email',
            'persona_autorizada' => 'required|array',
            'persona_autorizada.*' => 'required',
            'correos' => 'required|array',
            'correos.*' => 'required',
            'telefonos' => 'required|array',
            'telefonos.*' => 'required',
        ], $mensajes);
    
        if ($request->no_poste) {
            foreach ($request->no_poste as $key => $no_poste) {
                $registroPoste = new PersonaAutorizada();
                $registroPoste->id_personaAutorizada = $id_personaAutorizada;
                $registroPoste->domicilio = $request->domicilio[$key];
                $registroPoste->correo_electronico = $request->correo_electronico[$key];
                $registroPoste->persona_autorizada = $request->persona_autorizada[$key];
                $registroPoste->correos = $request->correos[$key];
                $registroPoste->telefonos = $request->telefonos[$key];
                $registroPoste->save();
            }
        }
        // Busca un cliente existente por correo electrónico
        $clienteExistente = Cliente::where('correo_electronico', $request->correo_electronico)->first();
    
        if ($clienteExistente) {
            // Si el cliente ya existe, actualiza la información
            $clienteExistente->update([
                'nombre_cliente' => $request->nombre_cliente,
                'domicilio' => $request->domicilio,
            ]);
    
            $clienteExistente->personaAutorizada()->update([
                'nombres' => $request->persona_autorizada,
                'correos' => $request->correos,
                'numeros_telefonicos' => $request->telefonos,
            ]);
    
            // Obtiene el ID del cliente existente
            $clienteId = $clienteExistente->id_cliente;
        } else {
            // Si el cliente no existe, crea uno nuevo
            $personaAutorizada = PersonaAutorizada::create([
                'nombres' => $request->persona_autorizada,
                'correos' => $request->correos,
                'numeros_telefonicos' => $request->telefonos,
            ]);
    
            $registroPrincipal = new Cliente([
                'nombre_cliente' => $request->nombre_cliente,
                'domicilio' => $request->domicilio,
                'correo_electronico' => $request->correo_electronico,
            ]);
    
            $personaAutorizada->cliente()->save($registroPrincipal);
    
            // Obtiene el ID del cliente recién creado
            $clienteId = $registroPrincipal->id_cliente;
        }
    
        Session::flash('success', 'La información se guardó exitosamente.');
        // Redirige a la página "formRegistro" pasando el ID del cliente como parámetro
        return redirect()->route('formRegistro', ['id_cliente' => $clienteId])->withErrors($request->all());
    }

    este es mi vista

    <div class="col-md-9 contenido-principal">
                <h5>ID del Cliente: {{ $ver['id_usuario'] }}</h5>
                <form method="POST" action="{{ route('guardar_informacion') }}">
                    @csrf
                    <p class="text-center font-weight-bold" style="border: 2px solid #ff0000; font-weight: bold;">
                        Estimado cliente, el presente cuestionario tiene la finalidad de tener la información precisa
                        para la realización correcta de la estructura del plano, que posteriormente se presentará para
                        el estudio de acceso ante Comisión Federal de Electricidad, para obtener los permisos para el
                        uso de su infraestructura.
                    </p>
                    <br>
                    <h5> Instrucciones. Responda cada una de las preguntas de manera clara.</h5>
                    <h6> 1. Para el registro y las notificaciones por parte de la CFE, solicito se me indique la
                        siguiente información, siendo los campos en color verde la persona que recibirá las claves de
                        acceso para el uso del sistema.</h6>
                    <br>
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="nombre_cliente">NOMBRE(S)</label>
                                <input style="border: 3px solid rgb(49, 131, 49);" type="text"
                                    class="form-control @error('nombre_cliente') is-invalid @enderror"
                                    id="nombre_cliente" name="nombre_cliente" value="{{$ver['nombre_usuario']}}">
                                @error('nombre_cliente')
                                <span class="invalid-feedback" role="alert">
                                    <strong>{{ $message }}</strong>
                                </span>
                                @enderror
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="domicilio">DOMICILIO</label>
                                <input style="border: 3px solid rgb(49, 131, 49);" type="text"
                                    class="form-control @error('domicilio') is-invalid @enderror" id="domicilio"
                                    name="domicilio">
                                @error('domicilio')
                                <span class="invalid-feedback" role="alert">
                                    <strong>{{ $message }}</strong>
                                </span>
                                @enderror
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="correo_electronico">CORREO ELECTRÓNICO</label>
                                <input style="border: 3px solid rgb(49, 131, 49);" type="email"
                                    class="form-control @error('correo_electronico') is-invalid @enderror"
                                    id="correo_electronico" name="correo_electronico"
                                    value="{{$ver['correo_electronico']}}">
                                @error('correo_electronico')
                                <span class="invalid-feedback" role="alert">
                                    <strong>{{ $message }}</strong>
                                </span>
                                @enderror
                            </div>
                        </div>
                    </div>
                    <br>
                    <div class="section">
                        @if ($errors->any())
                        <div class="alert alert-danger">
                            <ul>
                                @foreach ($errors->all() as $error)
                                <li>{{ $error }}</li>
                                @endforeach
                            </ul>
                        </div>
                        @endif
                        <table class="table table-bordered">
                            <thead>
                                <tr>
                                    <th>NO.PERSONA</th>
                                    <th>PERSONA AUTORIZADA</th>
                                    <th>CORREO</th>
                                    <th>NÚMEROS TELEFÓNICO</th>

                                    <th><button type="button" class="btn btn-agregar"
                                            onclick="agregarFila()">AGREGAR</button></th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td><input type="number" class="form-control" name="no_persona[]" required></td>
                                    <td><input type="text" class="form-control" name="persona_autorizada[]" required>
                                    </td>
                                    <td><input type="text" class="form-control" name="correos[]" required></td>
                                    <td><input type="text" class="form-control" name="telefonos[]" required></td>
                                    <td><button type="button" class="btn btn-eliminar"
                                            onclick="eliminarFila(this)">Eliminar</button></td>
                                </tr>
                            </tbody>
                        </table>
                    </div>


                    <br>
                    <div class="row mt-3">
                        <div class="col-md-6 d-flex justify-content-start">
                            <button type="submit" class="btn btn-primary">GUARDAR</button>
                        </div>
                        <div class="col-md-6 d-flex justify-content-end">
                            <a href="{{ route('siguiente_geoestadistica') }}" class="btn btn-primary">SIGUIENTE</a>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Incluye los scripts de Bootstrap y jQuery (asegúrate de tener jQuery instalado) -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.min.js"></script>
    
    <script>
        function agregarFila() {
            const table = document.querySelector("table tbody");
            const newRow = table.insertRow(table.rows.length - 1);

            const num = newRow.insertCell(0);
            num.innerHTML = '<input type="text" class="form-control" name="no_poste[]">';

            const persona = newRow.insertCell(1);
            persona.innerHTML = '<input type="text" class="form-control" name="persona_autorizada[]">';

            const correo = newRow.insertCell(2);
            correo.innerHTML = '<input type="text" class="form-control" name="correos[]">';

            const telefono = newRow.insertCell(3);
            telefono.innerHTML = '<input type="text" class="form-control" name="telefonos[]">';
            
            const cell9 = newRow.insertCell(4);
            cell9.innerHTML =
                '<button type="button" class="btn btn-eliminar" onclick="eliminarFila(this)">Eliminar</button>';
        }

        function eliminarFila(button) {
            const row = button.parentNode.parentNode;
            row.remove();
        }
        
    </script>